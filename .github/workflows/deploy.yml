name: deploy

on:
  push:
    branches: ["main", "staging"]
  pull_request:
    branches: ["main", "staging"]

jobs:
  # First workflow called "test-front" to launch test / to add when test-front will be addedd
  # test-front:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v2
  #     - name: Create env file
  #       run: |
  #         touch .env
  #         echo "${{ secrets.JWT_SECRET_KEY }}" > .env
  #         echo "NODE_ENV=test" >> .env
  #     - name: Run tests
  #       run: docker compose -f docker-compose.back.integration.test.yml up --build --exit-code-from testrunner

  # Second workflow called "deploy-main" to deploy on main CI/CD
  deploy-main:
    # needs: test-front
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # prepare buildx for docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # login with Docker
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # build an push the newly created image
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}"
          file: ./Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_HUB_CLIENT_IMAGE_NAME }}:latest

  # Third workflow called "deploy-staging" to deploy on dev CI/CD
  deploy-staging:
    # needs: test-front (add when test-front will be addedd)
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # prepare buildx for docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # login with Docker
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # build an push the newly created image
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}"
          file: ./Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_HUB_CLIENT_STAGING_IMAGE_NAME }}:latest